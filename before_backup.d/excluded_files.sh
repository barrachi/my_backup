#----------------------------------------------------
# my_backup script that generates excluded files file
#----------------------------------------------------

# Check that this script has been sourced
[[ ${BASH_SOURCE[0]} == ${0} ]] && { echo "Error: This script should be sourced by 'my_backup.sh'!" >&2 ; exit -1; }

# Write banner
echo
echo "==  Excluded files  =="

# Check required variables
[ -z "${EXCLUDED_FILES_FILE}" ] && { echo "Warning: generation of EXCLUDED_FILES_FILE skipped!"; return; }

# Generate excluded_files file
echo "Creating '${EXCLUDED_FILES_FILE}' with files to be excluded..."
cat > "${EXCLUDED_FILES_FILE}" <<EOF
#
# DO NOT EDIT THIS FILE!
#
# It has been generated by my_backup excluded_files.sh script
#
#---------------------------------------------------
# Files and directories not to be backed up
#---------------------------------------------------

# XSession files
#------------------------------
/*/.xauth*
/*/.xsession-*

# Cache dirs and navigators
#------------------------------
/*/.cache
/*/.compose_cache
/*/__pycache__
/*/cache
/home/*/.config/google-chrome
/home/*/.config/chromium
/home/*/.mozilla
/home/*/.pulse
/home/*/.zzz
/home/*/zzz


# Borg config dirs
#-----------------------------
/*/.config/borg

# Applications, indexers, and trash folders
#------------------------------
/*/.local/share/
/*/files_trashbin

# Download folders
#------------------------------
/*/Downloads
/*/Descargas

# Thumbnails folders
#------------------------------
/*/.thumbnails

# Wine folders
#------------------------------
/*/.wine

# Kite folders
#-----------------------------
/*/.kite

# NX, vnc and x2go folders
#-----------------------------
/*/.nx
/*/.vnc
/*/.x2go

# NPM folders
#-----------------------------
/home/*/.npm
/home/*/.npm-global

# Backup and log files
#------------------------------
*~
*.bak
*.old
*.log

# Version control dirs
#------------------------------
/*/.git
/*/.bzr

EOF

if [ -d /home/chroot/home/ ]; then
    echo "#--------------------------------------------------" >> "${EXCLUDED_FILES_FILE}"
    echo "# Chroot homes                                     " >> "${EXCLUDED_FILES_FILE}"
    echo "#--------------------------------------------------" >> "${EXCLUDED_FILES_FILE}"
    for HOME in /home/chroot/home/*;
    do
      echo "${HOME}" >> "${EXCLUDED_FILES_FILE}"
    done
fi

echo "#--------------------------------------------------" >> "${EXCLUDED_FILES_FILE}"
echo "# Python virtual environments                      " >> "${EXCLUDED_FILES_FILE}"
echo "#--------------------------------------------------" >> "${EXCLUDED_FILES_FILE}"
find /home -xdev -name "pyvenv.cfg" | \
    while read FILE; do
	echo "${FILE%/pyvenv.cfg}" >> "${EXCLUDED_FILES_FILE}"
    done

echo "#--------------------------------------------------" >> "${EXCLUDED_FILES_FILE}"
echo "# NodeJS modules                                   " >> "${EXCLUDED_FILES_FILE}"
echo "#--------------------------------------------------" >> "${EXCLUDED_FILES_FILE}"
find /home -xdev -type d -name node_modules -prune | \
    while read FILE; do
	echo "${FILE}" >> "${EXCLUDED_FILES_FILE}"
    done
